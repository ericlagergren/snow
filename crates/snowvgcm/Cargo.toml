[package]
name = "snowv-gcm"
version = "0.1.0"
description = """
The SNOW-V-GCM AEAD construction.
"""
authors.workspace = true
edition.workspace = true
license.workspace = true
readme = "README.md"
repository.workspace = true
documentation = "https://docs.rs/snowv"
keywords = [ "snowv", "snow", "snow-v", "snow5", "snow-v-gcm" ]
categories = [ "cryptography", "no-std", "no-std::no-alloc" ]

[lints]
workspace = true

[features]
default = []

# Enable `alloc`.
alloc = [
	"snowv/alloc",
]

# Enable RustCrypto bindings.
rust-crypto = [
	"dep:aead",
	"dep:cipher",
]

soft = [
	"polyhash/soft",
	"snowv/soft",
]

# Enable `std`.
std = [
	"snowv/std",
	"subtle/std",
	"polyhash/std",
]

zeroize = [
	"dep:zeroize",

	"polyhash/zeroize",
	"snowv/zeroize",
]

[dependencies]
snowv = { version = "0.1", path = "../snowv", default-features = false }

aead = { version = "0.5", default-features = false, optional = true }
cipher = { workspace = true, default-features = false, optional = true }
cfg-if = { workspace = true, default-features = false }
inout = { workspace = true, default-features = false }
polyhash = { version = "0.3", default-features = false }
subtle = { version = "2.6", default-features = false, features = ["core_hint_black_box"] }
zeroize = { workspace = true, default-features = false, optional = true }

[dev-dependencies]
snowv-gcm = { path = ".", features = ["rust-crypto"]}

hex-literal = { version = "0.4" }

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"]
